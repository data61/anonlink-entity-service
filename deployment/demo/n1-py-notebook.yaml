apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: notebook-ingress
  labels:
    app: jupyter-notebook
spec:
  rules:
  - host: jupyter.es.data61.xyz
    http:
      paths:
      - backend:
          serviceName: jupyter-notebook
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-notebook
  labels:
    app: jupyter-notebook
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: jupyter
    protocol: TCP
    targetPort: "jupyter-nb"
  selector:
    tier: aux
    run: n1-py-notebook
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: n1-py-notebook
spec:
  replicas: 1
  template:
    metadata:
      labels:
        tier: aux
        run: n1-py-notebook
    spec:
      containers:
      - name: n1-py-notebook
        image: jupyter/datascience-notebook
        args:
        - start-notebook.sh
        - --NotebookApp.password=sha1:7e7568c5eb33:ed6fa0b86f55dc199a2e99ff8b1f213cf3af7664
        ports:
        - containerPort: 8888
          name: jupyter-nb
        env:
        - name: USE_HTTPS
          value: "no"
        - name: GRANT_SUDO
          value: "yes"
#        volumeMounts:
#          - mountPath: "/data"
#            name: data-volume
      imagePullSecrets:
      - name: n1analytics-coreos-pull-secret
#      volumes:
#      - name: data-volume
#        persistentVolumeClaim:
#          claimName: es-job-data
