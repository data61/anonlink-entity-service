# A Swagger 2.0 (a.k.a. OpenAPI) definition of the Entity Service API.
#
# This is used for generating API documentation and the types used by the
# server.
#
# Some style notes:
# - This file is used by ReDoc, which allows GitHub Flavored Markdown in
#   descriptions.
swagger: '2.0'
info:
  version: '1.7.3'
  title: Entity Matching API
  contact:
    name: 'Confidential Computing, Data61 | CSIRO'
    email: support@n1analytics.com
  description: >-
    Allows two organisations to carry out private record linkage -
    without disclosing personally identifiable information.

    In general:

    * All parameters and returned objects are JSON with content-type set to
    application/json.

    * All authentication tokens are 48 character hex strings.

    * The resource identifiers are also 48 char hex strings.

    * HTTP status codes are used to distinguish server outcomes.


    **Note:** Several important concepts including security considerations are described in
    separate documentation.

    ### Introduction

    This is a service that computes record matches between providers. Data to be
    linked is locally hashed into cryptographic longterm keys (CLKs). This hashed 
    data is uploaded to the service for matching. The result is a permutation, or
    reordering, for each providers' data. Data to be linked must be locally
    transformed into cryptographic longterm keys following a particular schema
    before being uploaded.


    ### Security

    See the linked [security documentation](./security.html).

    __Warning__: anyone can use this service, however only the participants in a linkage are
    allowed to see the results.


    ### Hashing Data

    See the [clkhash](https://github.com/n1analytics/clkhash) project for details and a command line
    tool to locally hash the data to upload.



    ## Matching Protocols
    
    The Entity Service supports different **result types** which effect what output is produced,
    and who may see the output.

    See the documentation section on [output types](./concepts.html#result-types).

    The options are:

      * `"permutation"` - Create a random permutation and Paillier encrypted mask.
      * `"mapping"` - Directly output a lookup table of `indexA = indexB`.
      * `"permutation_unencrypted_mask"` - Create a random permutation and an unencrypted mask.
      * `"similarity_scores"` - Output a list of similarity scores of `[indexA, indexB, score]`, where `score`
        represents the likelihood that `indexA = indexB`.


host: es.data61.xyz
schemes:
  - "https"
basePath: /api/v1
produces:
  - application/json
consumes:
  - application/json
paths:
  /status:
    get:
      summary: Service status
      description: |
        Suitable for using as load balancer health check. Checks that
        redis cache and database are operational. Provides very high level system wide
        metrics.
      responses:
        '200':
          description: Service status.
          schema:
            type: object
            properties:
              status:
                type: string
                description: Will be "ok" if everything is working.
              number_mappings:
                type: integer
              rate:
                type: integer
                description: The most recent reported comparison rate of the system (comparisons per second).
          examples:
            application/json:
              - status: "ok"
                number_mappings: 3118
                rate: 1793757
        '500':
          description: | 
            System is experiencing difficulties. 
            E.g. application can't connect to database.
  /version:
    get:
      summary: Version
      description: |
        Return version numbers of libraries used.
      responses:
        '200':
          description: Versions
          schema:
            type: object
            properties:
              anonlink:
                type: string
              entityservice:
                type: string
              libc:
                type: string
              python:
                type: string
          examples:
            application/json:
              {"anonlink": "0.6.3", "entityservice": "v1.7.2", "libc": "glibc2.2.5", "python": "3.6.4"}
  /mappings:
    get:
      summary: List of mappings.
      description: |
        List of all mappings with their completion status.
        
        `'time_added'`, `'time_started'` and `'time_completed'` are represented in
        [ISO 8601 format](https://docs.python.org/3/library/datetime.html#datetime.datetime.isoformat).
        Note that the value will be `null` if the mapping has not yet started or completed.
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/mappings'
    post:
      summary: Create and configure a new linkage project.
      description: |
        Prepare resources and endpoints to accept updates from data providers.
        Provides the caller with credentials that will be required when adding
        data to the mapping and accessing the results.


        ### Schema
        
        Although these comprise the column names, the raw data will never be
        sent to this entity service. 
        
        
        Each participant will be able to see the schema to verify it is
        what they expect. Schema details should have been determined and agreed 
        on by each party before starting a mapping task. This is documented
        in [schema](./concepts.html#schema).
        
        ### Result Type
        
        The result type specifies what information is available after the entity
        resolving process has completed.
        
        Note
        `public_key` and `paillier_context` are only required if `result_type = "permutation"`.
        
        
      parameters:
        - in: body
          name: mapping
          required: true
          schema:
            $ref: '#/definitions/NewMapping'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/NewMappingResponse'
 
  '/mapping/{mapping-id}':
    get:
      summary: Linkage Progress and Results
      description: |
        Gets a detailed description of a `linkage` object by id. Note that when called **before**
        all data providers have uploaded their data a 503 will be returned.

        The response body for completed linkages depends on the `result_type`.

        ## Authentication Token
        
        A header with the name `Authorization` must be set to access this API. The token's value
        depends on the mapping's `result_type`:
        
        - if the `result_type` is `"mapping"` or `"similarity_scores"` then `token` is provided when
          initially creating the mapping (as `result-token`).
        - if the `result_type` is `"permutation"` then `token` is obtained when organisations
          add data to the mapping (as `receipt-token`)
        - if the `result_type` is `permutation_unenecrypted_mask`, the `token` to access the
          mask is provided initially creating the mapping (as `result-token`), and the
          `token` to access the permutation is obtained when organisations add data to the
          mapping (as `receipt-token`)
        
        
        ## Response
        
        The response schema depends on the mapping's `result_type`. OpenAPI doesn't
        allow different schemas (in v2) so these are documented here:
        
        
        ### result_type = "mapping"

        The mapping of indices between parties. Data is returned as `json` object e.g,
      
            {
                "mapping":
                    {
                        "0": "5",
                        "2": "0"
                    }
            }

        
        ### result_type = "similarity_scores"

        The list of the indices of potential matches and their similarity score
        where the similarity score is greater than the mapping threshold.
        Data is returned as `json` object e.g.,

            {
                "similarity_scores":
                    [
                        [5, 27, 1.0],
                        [14, 10, 1.0]
                    ]
            }


        The element in the list is of the following format `[indexA, indexB, score]`,
        where `indexA` refers to the index of entity from data provider 1, `indexB` is the index of entity
        from data provider 2 that is a potential match to entity in `indexA`, and `score` is the similarity score
        representing the likelihood that entity in `indexA` and entity in `indexB` is a match.

        `indexA` and `indexB` starts from 0.

        The value of `score` is between 0.0 and 1.0, where 0.0 corresponds to no match
        and 1.0 corresponds to total match.

        ### result_type = "permutation"
        
        The permutation, and mask specific for the calling organisation.
        Data is returned as `json` object e.g,
        
        
            {
                "permutation": [3,0,4,1,2],
                "mask": [0,1,0,1,1],   <-- As paillier encrypted, base64 encoded numbers
                "paillier_context": {
                    "base": 2,
                    "encoded": true
                }
            }
          
        
        In this example the first three elements in the original dataset are included,
        but have been reordered to the second, fourth and fifth positions. The other elements
        have been excluded with the encrypted mask. Note the permutation is specific to
        the caller. Also any data after row 5 is to be discarded after the reordering has
        been applied.
        
        The `mask` is a json array of Paillier encrypted numbers. These are the ciphertexts
        as integer strings. The encoded number base is `2`, and the precision is set to
        `1e3`. The exponent is not serialized, as it will always be 0. The resulting ciphertext
        is serialized with base64 encoding.
        
        In Python using `python-paillier`: `int_to_base64(public_key.encrypt(enc, precision).ciphertext())`
        
        
        ### result_type = "permutation_unencrypted_mask"
        
        The data providers will receive the permutation:
        
            
            {
                "permutation": [3,0,4,1,2],
                "rows": 5
            }
        
        
        The creator of the mapping gets access to the mask:
            
            {
                "mask": [0,1,0,1,1]
            }
            
        
        The mask is an array of 0/1 numbers.

        
      parameters:
        - $ref: '#/parameters/token'
        - $ref: '#/parameters/resource'
        
      responses:
        '401':
          description: Not Authenticated
          schema:
            $ref: '#/definitions/AuthError'
        '403':
          description: Invalid authentication or mapping not found.
        '500':
          description: |
            Fail to return similarity scores either because the corresponding CSV file cannot be found or is corrupted.
        '503':
          description: |
            Mapping is not yet ready. Includes progress object
          schema:
            $ref: '#/definitions/MappingProgress'
        '200':
          description: Successful response
    put:
      summary: Upload CLK data.
      description: |
        Called by each of the data providers with their calculated `CLK` vectors.
        The mapping must have been created, and the caller must have both the
        `mapping-id` and `token` in order to contribute data.

        This endpoint supports `Transfer-Encoding =  chunked` (streaming uploads).
        
        When the second party successfully adds data the matching task is queued;
        although it is worth noting there is no indication to the caller that this
        has occurred.
        
        The data uploaded is one [CLK](./concepts.html#cryptographic-longterm-keys) per entity/row.

        Note in the default deployment the maximum request size is set to `~10 GB`, which __should__
        translate to just over 20 million entities.
        
      parameters:
        - $ref: '#/parameters/resource'
        - $ref: '#/parameters/token'
        - in: body
          name: clks
          required: true
          schema:
            $ref: '#/definitions/CLKUpload'
      responses:
        '201':
          description: Data Uploaded
          schema:
            $ref: '#/definitions/UploadReceipt'
        '400':
          description: If required information is not provided, or wrong format
        '401':
          description: If the authentication token is not provided
        '403':
          description: If the authentication token is not valid, or the mapping isn't found.
    
    delete:
      summary: Delete linkage project.
      description: Remove the mapping and associated data from the service.
      parameters:
        - $ref: '#/parameters/resource'
      responses:
        '204':
          description: Successfully deleted
        '403':
          description: Mapping not present or invalid auth
  '/mapping/{mapping-id}/status':
    get:
      summary: Linkage Status
      description: A status update on a particular mapping
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MappingStatus'
parameters:
  token:
    required: true
    type: string
    name: Authorization
    in: header
  resource:
    in: path
    name: "mapping-id"
    description: Resource identifier of the mapping
    required: true
    type: string

definitions:

  AuthError:
    type: object
    properties:
      message:
        type: string
      
  mappings:
    type: array
    items:
      type: object
      description: Listing information about a mapping.
      properties:
        resource_id:
          type: string
        ready:
          type: boolean
        time_added:
          type: string
          description: ISO8601 formated datetime
          format: 'date-time'
        time_started:
          type: string
          description: ISO8601 formated datetime
          format: 'date-time'
        time_completed:
          type: string
          description: ISO8601 formated datetime
          format: 'date-time'

  MappingStatus:
    properties:
      ready:
        type: boolean
      threshold:
        type: number
        minimum: 0.0
        maximum: 1.0
      time_added:
        type: string
        format: 'date-time'
      time_started:
        type: string
        format: 'date-time'
      time_completed:
        type: string
        format: 'date-time'

  PaillierPublicKey:
    description: https://python-paillier.readthedocs.io/en/develop/serialisation.html#jwk-serialisation
    type: object
    properties:
      n:
        type: string
      kty:
        type: string
        default: "DAJ"
      kid:
        type: string
      key_ops:
        type: array
        items:
          type: string
      alg:
        type: string
        default: "PAI-GN1"

  PaillierContext:
    description: Information on the Paillier encoding
    type: object
    properties:
      encoded:
        type: boolean
      base:
        type: integer

  FeatureDescription:
    description: Feature description
    properties:
      identifier:
        type: string
      weight:
        type: number
      notes:
        type: string
    
  NewMapping:
    description: Configuration for a new mapping.
    type: object
    properties:
      schema:
        type: array
        description: The `schema` is an array of feature description
        items:
          $ref: '#/definitions/FeatureDescription'
            
      result_type:
        type: string
        description: Output types and authentication protocol
        enum:
          - similarity_scores
          - mapping
          - permutation
          - permutation_unencrypted_mask

      public_key:
        $ref: "#/definitions/PaillierPublicKey"
        
      paillier_context:
        $ref: "#/definitions/PaillierContext"

      threshold:
        type: number
        format: double
        default: 0.95
        description: |
          The similarity threshold (a number between 0 and 1) above which two entites will be considered a match.

          Note the default can be changed at deployment time.
      
    required:
      - schema
      - result_type
      
  NewMappingResponse:
    properties:
      resource_id:
        type: string
      update_tokens:
        type: array
        description: Array of single use tokens required to upload data.
        items:
          type: string
      result_token:
        description: a token required to access mapping results.
        type: string
  
  MappingProgress:
    properties:
      message:
        type: string
      elapsed:
        description: The number of seconds spent on computing this matching.
        type: number
        format: double
      total:
        description: Number of comparisons required for this Match
        type: number
        format: int
      current:
        type: number
        format: int
        description: How many comparisons have been carried out.
      progress:
        type: number
        description: >-
          Decimal between 0.0 and 1.0 indicating progress. For now equal to
          current/total.
  
  CLKUpload:
    description: Array of this party's Bloom Filters
    type: array
    items:
      type: string
      format: byte
      description: Base64 encoded CLK data
      
  UploadReceipt:
    properties:
      receipt-token:
        type: string
      message:
        type: string
