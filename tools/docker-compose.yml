version: '3.4'
services:

  db:
    image: postgres:11
    environment:
      - POSTGRES_PASSWORD=rX%QpV7Xgyrz
    volumes:
      - psql:/var/lib/postgresql/data
    #ports:
    #- 5432:5432
    healthcheck:
      test: pg_isready -q -h db -p 5432 -U postgres
      interval: 5s
      timeout: 30s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2020-12-03T05-49-24Z
    command: server /export
    environment:
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    volumes:
      - minio:/export
    ports:
      - 9000:9000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: redis:5.0


  # The flask application server
  backend:
    image: data61/anonlink-app:${TAG:-latest}
    environment:
      #- LOG_CFG=entityservice/verbose_logging.yaml
      - DATABASE_PASSWORD=rX%QpV7Xgyrz
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - UPLOAD_OBJECT_STORE_BUCKET=uploads
      - UPLOAD_OBJECT_STORE_SECURE=false
      - UPLOAD_OBJECT_STORE_ACCESS_KEY=EXAMPLE_UPLOAD_ACCESS_KEY
      - UPLOAD_OBJECT_STORE_SECRET_KEY=EXAMPLE_UPLOAD_SECRET_ACCESS_KEY
      - DOWNLOAD_ONLY_ACCESS_KEY=EXAMPLE_DOWNLOAD_ACCESS_KEY
      - DOWNLOAD_ONLY_SECRET_ACCESS_KEY=EXAMPLE_DOWNLOAD_SECRET_ACCESS_KEY
      - FLASK_DB_MIN_CONNECTIONS=1
      - FLASK_DB_MAX_CONNECTIONS=10
      - JAEGER_AGENT_HOST=jaeger
    depends_on:
      - db
      - db_init
      - redis
      - minio
      - objectstore_init

  # The application server can also setup the database
  db_init:
    image: data61/anonlink-app:${TAG:-latest}
    environment:
      - DEBUG=true
      - DATABASE_PASSWORD=rX%QpV7Xgyrz
      - FLASK_APP=entityservice
    entrypoint: /bin/sh -c "dockerize -wait tcp://db:5432 python -m flask initdb"
    depends_on:
      - db

  # Setup the object store to have another more restricted user
  objectstore_init:
    image: minio/mc:RELEASE.2020-04-19T19-17-53Z
    environment:
      # Provide root credentials to MINIO to set up more restricted service accounts
      # MC_HOST_alias is equivalent to manually configuring a minio host
      # mc config host add minio http://minio:9000 <MINIO_ACCESS_KEY> <MINIO_SECRET_KEY>
      #- MC_HOST_minio=http://AKIAIOSFODNN7EXAMPLE:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY@minio:9000
      - MINIO_SERVER=minio:9000
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      # Account which will have upload only object store access.
      - UPLOAD_ONLY_ACCESS_KEY=EXAMPLE_UPLOAD_ACCESS_KEY
      - UPLOAD_ONLY_SECRET_ACCESS_KEY=EXAMPLE_UPLOAD_SECRET_ACCESS_KEY
      # Account which will have "get only" object store access.
      - DOWNLOAD_ONLY_ACCESS_KEY=EXAMPLE_DOWNLOAD_ACCESS_KEY
      - DOWNLOAD_ONLY_SECRET_ACCESS_KEY=EXAMPLE_DOWNLOAD_SECRET_ACCESS_KEY
      - UPLOAD_BUCKET=uploads
    entrypoint: |
      /bin/sh /opt/init-object-store.sh
    volumes:
      - ./init-object-store.sh:/opt/init-object-store.sh:ro
    depends_on:
      - minio

  # A celery worker
  worker:
    image: data61/anonlink-app:${TAG:-latest}
    depends_on:
      - redis
      - db
    command: celery -A entityservice.async_worker worker --loglevel=info -O fair -Q celery,compute,highmemory
    environment:
      - DATABASE_PASSWORD=rX%QpV7Xgyrz
      - LOG_CFG=entityservice/verbose_logging.yaml
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - UPLOAD_OBJECT_STORE_BUCKET=uploads
      - UPLOAD_OBJECT_STORE_SECURE=false
      - CELERY_ACKS_LATE=true
      - REDIS_USE_SENTINEL=false
      - CELERYD_MAX_TASKS_PER_CHILD=2048
      #- CHUNK_SIZE_AIM=300_000_000
      - CELERY_DB_MIN_CONNECTIONS=1
      - CELERY_DB_MAX_CONNECTIONS=3
      - JAEGER_AGENT_HOST=jaeger


  nginx:
    image: data61/anonlink-nginx:${TAG:-latest}
    ports:
      - 8851:8851
    depends_on:
      - backend
    environment:
      TARGET_SERVICE: backend
      PUBLIC_PORT: 8851


  # A celery monitor. Useful for debugging.
#  celery_monitor:
#    image: data61/anonlink-app:${TAG:-latest}
#    depends_on:
#      - redis
#      - worker
#    command: celery flower -A entityservice.async_worker
#    ports:
#      - 8888:8888

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
#    ports:
#      - 5775:5775/udp
#      - 6831:6831/udp
#      - 6832:6832/udp
#      - 5778:5778
#      - 16686:16686
#      - 14268:14268
#      - 9411:9411

volumes:
  psql:
  minio:
